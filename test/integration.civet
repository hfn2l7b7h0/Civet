fs from fs

Civet from ../source/main.coffee

Hera from ../source/parser.hera
{parse} := Hera
gen from ../source/generate.coffee

assert from assert

compile := (src) ->
  return Function gen (parse src), {}

describe "integration", ->
  it "should parse CoffeeScript 2 files", ->
    src := fs.readFileSync("integration/example/generate.coffee", "utf8")

    assert compile(src)

  // TODO: CoffeeScript single line comments
  it.skip "should parse CoffeeScript 2 files", ->
    src := fs.readFileSync("integration/example/util.coffee", "utf8")

    assert compile(src)

  it "should sourcemap complex civet files", ->
    src := fs.readFileSync("integration/example/compiler.civet", "utf8")

    assert Civet.compile(src, { sourceMap: true })
