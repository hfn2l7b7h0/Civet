{testCase} from ./helper.civet

describe "strings", ->

  testCase """
    empty
    ---
    x = ""
    ---
    x = ""
  """

  testCase """
    a
    ---
    x = "a"
    ---
    x = "a"
  """

  // NOTE: Backslashes are escaped so two here become one in the input
  testCase """
    line continuation
    ---
    x = "a\\
    b"
    ---
    x = "a\\
    b"
  """

  testCase """
    multi-line
    ---
    x = "a
    b"
    ---
    x = "a\\nb"
  """

  testCase """
    escaped backslash then newline
    ---
    x = "a\\\\
    b"
    ---
    x = "a\\\\\\nb"
  """

  testCase """
    escaped backslash then non-escaped backslash then newline
    ---
    x = "a\\\\\\
    b"
    ---
    x = "a\\\\\\
    b"
  """

  testCase '''
    coffee compat string interpolation
    ---
    "civet coffee-compat"
    x = "a#{b}c"
    ---
    var x
    x = `a${b}c`
  '''

  testCase '''
    coffee compat string interpolation with escaped octothorpe
    ---
    "civet coffee-compat"
    x = "a\\#{b}c"
    ---
    var x
    x = "a\\#{b}c"
  '''

  testCase '''
    coffee compat string interpolation with newlines
    ---
    "civet coffee-compat"
    x = "a
    #{b}c"
    ---
    var x
    x = `a\\n${b}c`
  '''
