{ testCase, throws } from ./helper.civet

describe "if", ->
  testCase """
    if
    ---
    if (true) {
      return false
    }
    ---
    if (true) {
      return false
    }
  """

  testCase """
    else
    ---
    if (true) {
      return false
    } else {
      return true
    }
    ---
    if (true) {
      return false
    } else {
      return true
    }
  """

  testCase """
    no parens
    ---
    if true
      return false
    ---
    if (true) {
      return false
    }
  """

  testCase """
    no parens else
    ---
    if true
      return false
    else
      return
    ---
    if (true) {
      return false
    }
    else {
      return
    }
  """

  testCase """
    weird spacing
    ---
    if (true) 5
    else 3
    ---
    if (true) 5
    else 3
  """

  testCase """
    unless
    ---
    unless x
      return y
    ---
    if (!(x)) {
      return y
    }
  """

  testCase """
    unless more complex exp
    ---
    unless x + z
      return y
    ---
    if (!(x + z)) {
      return y
    }
  """

  testCase """
    postfix unless
    ---
    return true unless x
    ---
    if (!(x))return true
  """

  testCase """
    postfix if
    ---
    return true if x
    ---
    if (x)return true
  """

  it "postfix if inside if", ->
    throws """
      if x return true if y
    """

  describe "expression", ->
    testCase """
      if expression
      ---
      x = if y
        "a"
      else
        "b"
      ---
      x = (y)?(
        "a"
      ):
      (
        "b"
      )
    """

    testCase """
      if expression no else
      ---
      x = if (y)
        "a"
      ---
      x = (y)?(
        "a"
      ):void 0
    """

    testCase """
      nested if expression
      ---
      x = if y
        if z
          "a"
        else
          "b"
      else
        "c"
      ---
      x = (y)?(
        (z)?(
          "a"
        ):
        (
          "b"
        )
      ):
      (
        "c"
      )
    """
