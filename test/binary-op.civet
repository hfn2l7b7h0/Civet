{testCase} from ./helper.civet

describe "binary operations", ->
  testCase """
    bitwise shift
    ---
    a << b
    a >> b
    a >>> b
    ---
    a << b
    a >> b
    a >>> b
  """

  testCase """
    multiplicative
    ---
    a * b
    a / b
    a % b
    ---
    a * b
    a / b
    a % b
  """

  testCase """
    additive
    ---
    a + b
    a - b
    ---
    a + b
    a - b
  """

  testCase """
    relational
    ---
    a < b
    a > b
    a <= b
    a >= b
    a == b
    a === b
    a != b
    a !== b
    ---
    a < b
    a > b
    a <= b
    a >= b
    a == b
    a === b
    a != b
    a !== b
  """

  testCase """
    converts is to ===
    ---
    a is b
    ---
    a === b
  """

  testCase """
    bitwise
    ---
    a | b
    a & b
    a ^ b
    ---
    a | b
    a & b
    a ^ b
  """

  testCase """
    logical
    ---
    a || b
    a or b
    a && b
    a and b
    a ?? b
    ---
    a || b
    a || b
    a && b
    a && b
    a ?? b
  """

  testCase """
    multiple logical
    ---
    a || b || c
    a && b && c
    a || b && c
    a && b || c
    ---
    a || b || c
    a && b && c
    a || b && c
    a && b || c
  """

  testCase """
    weird spacing
    ---
    a
        + 123
     /*heyy*/    + 1

           + b
    ---
    a
        + 123
     /*heyy*/    + 1

           + b
  """

  testCase """
    throw expression in logical or binary op
    ---
    a or throw new Error
    ---
    a || (()=>{throw new Error})()
  """

  testCase """
    late assignments
    ---
    x = 3 + y = 2 + z = 1
    ---
    x = 3 + (y = 2 + (z = 1))
  """
