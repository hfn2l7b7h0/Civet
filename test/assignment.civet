{testCase} from ./helper.civet

describe "assignment operations", ->
  testCase """
    assignment
    ---
    a = b
    ---
    a = b;
  """

  testCase """
    mutation
    ---
    a += b
    a -= b
    ---
    a += b;
    a -= b;
  """

  testCase """
    allows newlines
    ---
    a =
    b
    ---
    a =
    b;
  """

  testCase """
    const assignment shorthand
    ---
    a := b
    {a, b} := c
    ---
    const a = b;
    const {a, b} = c;
  """

  testCase """
    const assignment nested object with implied braces
    ---
    a :=
      b: c
    ---
    const a = {
      b: c,
    };
  """

  testCase """
    const assignment nested object with explicit braces
    ---
    a := {
      b: c
    }
    ---
    const a = {
      b: c,
    };
  """

  testCase """
    assignment to nested object with implied braces and object method
    ---
    x :=
      environment: 'node'
      retrieveFile(pathOrUrl: string)
        return 'wat'
    ---
    const x = {
      environment: 'node',
      retrieveFile(pathOrUrl: string) {
        return 'wat';
      },
    };
  """

  testCase """
    assignment to nested object with implied braces and object method
    ---
    x :=
      environment: 'node'
      retrieveFile(pathOrUrl: string)
        a++
        return 'wat'
    ---
    const x = {
      environment: 'node',
      retrieveFile(pathOrUrl: string) {
        a++;
        return 'wat';
      },
    };
  """

  describe.skip "TODO (maybe)", ->
    testCase """
      multiple single line const assignments
      ---
      x := 1, y := 2
      ---
      const x = 1, y = 2;
    """

  testCase """
    assign nested object
    ---
    const DefaultCompilerOptions =
      allowNonTsExtensions: true
      allowJs: true
      target: ts.ScriptTarget.Latest
      moduleResolution: ts.ModuleResolutionKind.NodeJs
      module: ts.ModuleKind.CommonJS
      allowSyntheticDefaultImports: true
      experimentalDecorators: true
    ---
    const DefaultCompilerOptions = {
      allowNonTsExtensions: true,
      allowJs: true,
      target: ts.ScriptTarget.Latest,
      moduleResolution: ts.ModuleResolutionKind.NodeJs,
      module: ts.ModuleKind.CommonJS,
      allowSyntheticDefaultImports: true,
      experimentalDecorators: true,
    };
  """

  testCase """
    all assignment operators
    ---
    a **= b
    a *= b
    a /= b
    a %= b
    a += b
    a -= b
    a <<= b
    a >>>= b
    a >>= b
    a &&= b
    a &= b
    a ^= b
    a ||= b
    a |= b
    a ??= b
    a ?= b
    a = b
    ---
    a **= b;
    a *= b;
    a /= b;
    a %= b;
    a += b;
    a -= b;
    a <<= b;
    a >>>= b;
    a >>= b;
    a &&= b;
    a &= b;
    a ^= b;
    a ||= b;
    a |= b;
    a ??= b;
    a ??= b;
    a = b;
  """
